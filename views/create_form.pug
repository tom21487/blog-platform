extends layout

block content
  h3 Create new post
  form(method='POST' action='' enctype="multipart/form-data" style="margin: 10%")
  
    div.form-group
      | type: 
      select(name='type')
        option project
        option blog

    div.form-group
      | title: 
      input(name='title' type='text' autocomplete='off')

    div.form-group
      | description: 
      input(name='description' type='text' autocomplete="off")
    
    div.form-group
      | tags: 
      each tag, index in tags
        input(name='tags[]' type='checkbox' value=tag.title checked=tag.checked)
        | #{tag.title}
        if index < tags.length - 1
          | ,
      | 
      a(href='/tags') (manage tags)
    
    div.form-group
      | modules:
      br
      div#allmodules
        div#module0
          select(onchange="displayField('module0')")
            option(value='text' selected) text
            option(value='image') image
          textarea(name='text' style="display: block; height: 100px;") module0
          button(type='button' onclick="deleteModule('module0')") x
      button(type='button' onclick="addModule()") add module

    button(type='submit' style="display: block") submit

  script.
    function displayField(id) {
      let module = document.getElementById(id);
      let mode = module.childNodes[0].value;
      let oldInput = module.childNodes[1];
      let newInput;
      if (mode == 'text') {
        newInput = document.createElement('textarea');
        newInput.type = 'textarea';
        newInput.name = 'text'
        newInput.style.display = "block";
        newInput.style.height = "100px";
        newInput.innerText = id;
      }
      else {
        newInput = document.createElement('input');
        newInput.type = 'file';
        newInput.name = 'image';
        newInput.style.display = "inline";
      }
      oldInput.remove();
      let button = module.childNodes[1];
      module.insertBefore(newInput, button);
    }

    function addModule() {
      let allModules = document.getElementById("allmodules");
      let newModule = document.createElement('div');
      newModule.id = "module" + allModules.childNodes.length;
      
      let moduleSelect = document.createElement('select');
      //moduleSelect.addEventListener('change', displayField.bind(null, newModule.id));
      moduleSelect.onchange = displayField.bind(null, newModule.id);
      let textOption = document.createElement('option');
      textOption.value = 'text';
      textOption.innerText = 'text';

      let imgOption = document.createElement('option');
      imgOption.value = 'image';
      imgOption.innerText = 'image';

      moduleSelect.appendChild(textOption);
      moduleSelect.appendChild(imgOption);

      let textArea = document.createElement('textarea');
      textArea.name = 'text';
      textArea.style.display = "block";
      textArea.style.height = "100px";
      textArea.innerText = newModule.id;

      let deleteBtn = document.createElement('button');
      deleteBtn.type = 'button';
      deleteBtn.innerText = 'x';
      //deleteBtn.addEventListener('click', deleteModule.bind(null, newModule.id));
      deleteBtn.onclick = deleteModule.bind(null, newModule.id);

      newModule.appendChild(moduleSelect);
      newModule.appendChild(textArea);
      newModule.appendChild(deleteBtn);

      allModules.appendChild(newModule);
    };

    function deleteModule(id) {
      let rank = parseInt(id.slice(6, id.length), 10);
      let allModules = document.getElementById("allmodules");
      for (let i = rank+1; i < allModules.childNodes.length; ++i) {
        // currentModule is passed by reference
        let currentModule = allModules.childNodes[i];
        let currentRank = parseInt(currentModule.id.slice(6, currentModule.id.length), 10);
        currentRank -= 1;
        currentModule.id = "module" + currentRank;
        let moduleSelect = currentModule.childNodes[0];
        moduleSelect.onchange = displayField.bind(null, currentModule.id);
        let deleteBtn = currentModule.childNodes[2];
        deleteBtn.onclick = deleteModule.bind(null, currentModule.id);
        currentModule.childNodes[1].innerText = currentModule.id;
      }
      let moduleToDelete = document.getElementById(id);
      moduleToDelete.remove();
    }